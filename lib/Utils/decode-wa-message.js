Object.defineProperty(exports,"__esModule",{value:!0});exports.decryptMessageNode=exports.decodeMessageNode=void 0;const boom_1=require("@hapi/boom"),WAProto_1=require("../../WAProto"),WABinary_1=require("../WABinary"),generics_1=require("./generics"),NO_MESSAGE_FOUND_ERROR_TEXT="Message absent from node";
function decodeMessageNode(d,p,u){var f,l;let c,e;const q=d.attrs.id;var a=d.attrs.from;const g=d.attrs.participant;var b=d.attrs.recipient;const r=h=>(0,WABinary_1.areJidsSameUser)(h,p),k=h=>(0,WABinary_1.areJidsSameUser)(h,u);if((0,WABinary_1.isJidUser)(a)){if(b){if(!(0,WABinary_1.areJidsSameUser)(a,p))throw new boom_1.Boom("receipient present, but msg not from me",{data:d});c=b}else c=a;b="chat";e=a}else if((0,WABinary_1.isLidUser)(a)){if(b){if(!(0,WABinary_1.areJidsSameUser)(a,u))throw new boom_1.Boom("receipient present, but msg not from me",
{data:d});c=b}else c=a;b="chat";e=a}else if((0,WABinary_1.isJidGroup)(a)){if(!g)throw new boom_1.Boom("No participant in group message");b="group";e=g;c=a}else if((0,WABinary_1.isJidBroadcast)(a)){if(!g)throw new boom_1.Boom("No participant in group message");b=(0,WABinary_1.areJidsSameUser)(g,p);b=(0,WABinary_1.isJidStatusBroadcast)(a)?b?"direct_peer_status":"other_status":b?"peer_broadcast":"other_broadcast";c=a;e=g}else if((0,WABinary_1.isJidNewsLetter)(a))b="newsletter",c=e=a;else throw new boom_1.Boom("Unknown message type",
{data:d});const t=(0,WABinary_1.isJidNewsLetter)(a)?!(null===(f=d.attrs)||void 0===f||!f.is_sender):((0,WABinary_1.isLidUser)(a)?k:r)(d.attrs.participant||d.attrs.from);f={remoteJid:c,fromMe:t,id:q,participant:g};a={key:f,messageTimestamp:+d.attrs.t,pushName:d.attrs.notify,broadcast:(0,WABinary_1.isJidBroadcast)(a)};"newsletter"===b&&(a.newsletterServerId=+(null===(l=d.attrs)||void 0===l?NaN:l.server_id));f.fromMe&&(a.status=WAProto_1.proto.WebMessageInfo.Status.SERVER_ACK);return{fullMessage:a,author:e,
sender:"chat"===b?e:c}}exports.decodeMessageNode=decodeMessageNode;
const decryptMessageNode=(d,p,u,f,l)=>{const {fullMessage:c,author:e,sender:q}=decodeMessageNode(d,p,u);return{fullMessage:c,category:d.attrs.category,author:e,async decrypt(){async function a(k){if(k.senderKeyDistributionMessage)try{await f.processSenderKeyDistributionMessage({authorJid:e,item:k.senderKeyDistributionMessage})}catch(t){l.error({key:c.key,err:t},"failed to process senderKeyDistribution")}}let g=0;if((0,WABinary_1.isJidNewsLetter)(c.key.remoteJid)){var b=(0,WABinary_1.getBinaryNodeChild)(d,
"plaintext");b=WAProto_1.proto.Message.decode(null===b||void 0===b?void 0:b.content);await a(b);c.message=b;g+=1}else if(Array.isArray(d.content))for(const {tag:k,attrs:t,content:h}of d.content){if("verified_name"===k&&h instanceof Uint8Array){var r=WAProto_1.proto.VerifiedNameCertificate.decode(h);r=WAProto_1.proto.VerifiedNameCertificate.Details.decode(r.details);c.verifiedBizName=r.verifiedName}if("enc"!==k)continue;if(!(h instanceof Uint8Array))continue;g+=1;let v;try{const m=t.type;switch(m){case "skmsg":v=
await f.decryptGroupMessage({group:q,authorJid:e,msg:h});break;case "pkmsg":case "msg":const w=(0,WABinary_1.isJidUser)(q)?q:e;v=await f.decryptMessage({jid:w,type:m,ciphertext:h});break;default:throw Error(`Unknown e2e type: ${m}`);}let n=WAProto_1.proto.Message.decode((0,generics_1.unpadRandomMax16)(v));n=(null===(b=n.deviceSentMessage)||void 0===b?void 0:b.message)||n;await a(n);c.message?Object.assign(c.message,n):c.message=n}catch(m){l.error({key:c.key,err:m},"failed to decrypt message"),c.messageStubType=
WAProto_1.proto.WebMessageInfo.StubType.CIPHERTEXT,c.messageStubParameters=[m.message]}}g||(c.messageStubType=WAProto_1.proto.WebMessageInfo.StubType.CIPHERTEXT,c.messageStubParameters=[NO_MESSAGE_FOUND_ERROR_TEXT,JSON.stringify(d,generics_1.BufferJSON.replacer)])}}};exports.decryptMessageNode=decryptMessageNode;
